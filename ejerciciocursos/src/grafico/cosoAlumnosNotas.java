/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafico;

import javax.swing.JOptionPane;

/**
 *
 * @author PC16
 */
public class cosoAlumnosNotas extends javax.swing.JFrame {
    
    
    
     int valorarray =10;
       int [] NotaAlumnos  =  new int [valorarray];
       String[] apellidos = new String [valorarray];
       
       double promedioMateria=0;
       int cantidadaplazados;
       int cantidadaprobados;
       int porcentajeaplazados;
       int porcentajeAprobados;
      private int contadorapellido;
      private int contadornota;
       
       metodos metodos = new metodos();


       
       

    /**
     * Creates new form cosoAlumnosNotas
     */
    public cosoAlumnosNotas() {
        initComponents();
        this.contadorapellido=0;
        this.setLocationRelativeTo(null);
        this.setTitle("Alumnos Aprobados y desaprobados Etc ");
     
    }

    public int getContadorapellido() {
        return contadorapellido;
    }

    public void setContadorapellido(int contadorapellido) {
        this.contadorapellido = contadorapellido;
    }

    public int getContadornota() {
        return contadornota;
    }

    public void setContadornota(int contadornota) {
        this.contadornota = contadornota;
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea1 = new java.awt.TextArea();
        jPanel1 = new javax.swing.JPanel();
        label2 = new java.awt.Label();
        apellido = new java.awt.TextField();
        label3 = new java.awt.Label();
        camponota = new java.awt.TextField();
        label8 = new java.awt.Label();
        CantALuIngresados = new java.awt.TextField();
        button8 = new java.awt.Button();
        button9 = new java.awt.Button();
        label4 = new java.awt.Label();
        promedioGeneral = new java.awt.TextField();
        label5 = new java.awt.Label();
        campoaplazados = new java.awt.TextField();
        label6 = new java.awt.Label();
        campoPorcAprobados = new java.awt.TextField();
        label7 = new java.awt.Label();
        PorcAprob = new java.awt.TextField();
        button1 = new java.awt.Button();
        promedio = new java.awt.Button();
        button3 = new java.awt.Button();
        button4 = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        button5 = new java.awt.Button();
        button6 = new java.awt.Button();
        button7 = new java.awt.Button();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label2.setText("Ingresar Apellido Alumno");
        jPanel1.add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 150, 33));
        label2.getAccessibleContext().setAccessibleName("");

        apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidoActionPerformed(evt);
            }
        });
        jPanel1.add(apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 47, 177, -1));

        label3.setText("Ingresar nota Alumno");
        jPanel1.add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 84, 142, 29));
        jPanel1.add(camponota, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 177, -1));

        label8.setText("Total alumnos ingresados");
        jPanel1.add(label8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 150, 20));
        jPanel1.add(CantALuIngresados, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 63, -1));

        button8.setLabel("cargar nota alumno");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });
        jPanel1.add(button8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, 20));
        button8.getAccessibleContext().setAccessibleName("");

        button9.setLabel("cargar apellido");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });
        jPanel1.add(button9, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, 20));
        button9.getAccessibleContext().setAccessibleName("Cargar apellido");
        button9.getAccessibleContext().setAccessibleDescription("");

        label4.setText("Promedio general");
        jPanel1.add(label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 125, -1));
        jPanel1.add(promedioGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 87, 20));

        label5.setText("Cantidad aplazados");
        jPanel1.add(label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 228, 109, -1));
        jPanel1.add(campoaplazados, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 228, 87, -1));

        label6.setText("Cantidad de aprobados");
        jPanel1.add(label6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));
        label6.getAccessibleContext().setAccessibleName("Porcentaje de aplazados");

        campoPorcAprobados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPorcAprobadosActionPerformed(evt);
            }
        });
        jPanel1.add(campoPorcAprobados, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 87, -1));

        label7.setText("Porcentaje de aprobados");
        jPanel1.add(label7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));
        jPanel1.add(PorcAprob, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 87, -1));

        button1.setLabel("Calcular");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        jPanel1.add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, -1, -1));

        promedio.setLabel("Calcular");
        promedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promedioActionPerformed(evt);
            }
        });
        jPanel1.add(promedio, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, -1));

        button3.setLabel("Calcular");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });
        jPanel1.add(button3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, -1, -1));

        button4.setLabel("Calcular");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });
        jPanel1.add(button4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, -1));
        button4.getAccessibleContext().setAccessibleName("");

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 330, 200));

        button5.setLabel("Mostrar alumno con mejor nota");
        button5.setName(""); // NOI18N
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });
        jPanel1.add(button5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, 230, -1));

        button6.setLabel("Mostrar listado aplazados");
        button6.setName(""); // NOI18N
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });
        jPanel1.add(button6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 230, -1));

        button7.setLabel("Mostrar listado nota mas alta a mas baja");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });
        jPanel1.add(button7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 520, 230, -1));

        jButton1.setText("Mostrar listado de aprobados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 230, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 620, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // MOSTRAR LISTADO APROBADOS
        
        if (this.contadornota < NotaAlumnos.length) {
            
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de mostrar listado de alumnos aprobados","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
            
           
        } else {

        textArea.setText("");
        int posicion = 0;

        for (int i=0 ; i <NotaAlumnos.length ; i++ ){

            if (NotaAlumnos[i] >= 4){
                posicion = i;

                textArea.append("El alumno "+ apellidos[posicion] +" aprobó la materia\n");

    }//GEN-LAST:event_jButton1ActionPerformed
        }
        }
    }
    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        // mejor nota
        
        if (this.contadornota < NotaAlumnos.length) {
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de calcular alumno con mejor nota","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
          
        } else {
        
        textArea.setText("");
        int posicion =  metodos.MostarMejorCalificadoGrafico(NotaAlumnos, apellidos);

        String mejorAlumno =apellidos [posicion] ;

        int notaMejorAlumno = NotaAlumnos[posicion];

        String mejorAlu = Integer.toString(notaMejorAlumno);

        textArea.setText(" El alumno " + mejorAlumno + " tiene la nota mas alta " + mejorAlu);

    }//GEN-LAST:event_button5ActionPerformed
    }
    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        // calcular aprobados
        
        if (this.contadornota < NotaAlumnos.length) {
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de calcular cantidad de alumnos aprobados","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
         
        }else{
        
        int cantidadAprobados= metodos.aprobados(NotaAlumnos);

        String Aprobados = Integer.toString(cantidadAprobados);

        campoPorcAprobados.setText(Aprobados);

    }//GEN-LAST:event_button4ActionPerformed
    }
    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // calculo aplazados
        
        if (this.contadornota < NotaAlumnos.length) {
            
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de calcular cantidad de aplazados","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
        } else{
        int cantidadDeAplazados =  metodos.aplazo(NotaAlumnos);

        String aplazados = Integer.toString(cantidadDeAplazados);

        campoaplazados.setText(aplazados);

    }//GEN-LAST:event_button3ActionPerformed
    }
    private void promedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promedioActionPerformed
        // boton promedio
  
        
        if (this.contadornota < NotaAlumnos.length) {
            
            JOptionPane.showMessageDialog (null," Debe  ingresar " + valorarray + " alumnos antes de calcular promedio "," Falta ingresar alumnos", JOptionPane.ERROR_MESSAGE);
        } else {
        
        double resultadoPromedio =  Math.round(metodos.PromedioGeneral(NotaAlumnos, valorarray));

        String promedioString = String.valueOf(resultadoPromedio);

        promedioGeneral.setText(promedioString);
    }//GEN-LAST:event_promedioActionPerformed
    }
    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // Porcentaje aprobados
if (this.contadornota < NotaAlumnos.length) {
    
    JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de calcular el porcentaje de aprobados ","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
            
        }else{
        String aluAprob =  campoPorcAprobados.getText();

        int cantAprob = Integer.parseInt(aluAprob);

        int aprobadosPorcentaje =  metodos.PorcentajeAprobados(valorarray, cantAprob);

        String Aprobados = Integer.toString(aprobadosPorcentaje);

        PorcAprob.setText(Aprobados + " % ");
    }//GEN-LAST:event_button1ActionPerformed
    }
    private void campoPorcAprobadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPorcAprobadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPorcAprobadosActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        // boton ingresar alumno
        try {
            if (apellido.getText().equals("")){
          JOptionPane.showMessageDialog (null,"Ingresar apellido alumno","Falta ingresar apellido del alumno", JOptionPane.ERROR_MESSAGE );
               
            
            } else {
        this.setContadorapellido(contadorapellido+1);
          
        apellidos[contadorapellido-1]= apellido.getText();

        String contador = Integer.toString(contadorapellido);

        this.CantALuIngresados.setText(contador);
        
     //   if (this.contadorapellido >= 0 && this.contadornota >= 0){
            
       //      JOptionPane.showMessageDialog (null,this.contadorapellido + "Alumno ingresado");
               
            
            
            
            
            
       // }
        
            }                   } catch(ArrayIndexOutOfBoundsException e ) {
                                          
                                          
                                          
                            JOptionPane.showMessageDialog (null," Cantidad de alumnos a ingresar superada","Error",JOptionPane.ERROR_MESSAGE );               
                                         
                                          
                                          
                                          
                                          
                                      }
           

    }//GEN-LAST:event_button9ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        // Ingreso nota
        
        try {
 if (apellido.getText().equals("")){
          JOptionPane.showMessageDialog (null,"Ingresar nota del  alumno","Falta ingresar nota del alumno", JOptionPane.ERROR_MESSAGE );
 } else{
        this.setContadornota(contadornota+1);

        camponota.getText();

        int nota = Integer.parseInt(camponota.getText());

        NotaAlumnos[contadornota-1]=nota;}
        
        } 
        catch(ArrayIndexOutOfBoundsException e ){
            
            JOptionPane.showMessageDialog (null," Cantidad de alumnos a ingresar superada ");  
            
        }catch(NumberFormatException ex){
            
            JOptionPane.showMessageDialog (null," Ingresa numero entre 1 y " + valorarray,"Error",JOptionPane.ERROR_MESSAGE);  
            
            
        }

    }//GEN-LAST:event_button8ActionPerformed

    private void apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        // listado apalzados
        if (this.contadornota < NotaAlumnos.length) {
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de mostrar listado de aplazados","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
            
        }else{
           textArea.setText("");
        int posicion = 0;

        for (int i=0 ; i <NotaAlumnos.length ; i++ ){

            if (NotaAlumnos[i] < 4){
                posicion = i;

                textArea.append("El alumno "+ apellidos[posicion] +" no aprobó la materia\n");

        
    }//GEN-LAST:event_button6ActionPerformed
        }
    }
    }
    
    
    
    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        //listado nota mas alta a mas baja
        if (this.contadornota < NotaAlumnos.length) {
            JOptionPane.showMessageDialog (null," Debe Ingresar " + valorarray + " alumnos antes de mostrar listado nota mas alta a mas baja","Falta ingresar Alumnos", JOptionPane.ERROR_MESSAGE );
         
        }else{
        textArea.setText("");
       metodos.NombresYNotasMayorAMenorGrafico(NotaAlumnos,apellidos);
        
          
             for (int i =0 ;i < NotaAlumnos.length ; i++){
                 
                 textArea.append(" La nota del alumno " + apellidos[i]+ " es " + NotaAlumnos[i]+"\n");
                 
             }
        

    }//GEN-LAST:event_button7ActionPerformed
    }
    
        

         
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cosoAlumnosNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cosoAlumnosNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cosoAlumnosNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cosoAlumnosNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cosoAlumnosNotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField CantALuIngresados;
    private java.awt.TextField PorcAprob;
    private java.awt.TextField apellido;
    private java.awt.Button button1;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private java.awt.TextField campoPorcAprobados;
    private java.awt.TextField campoaplazados;
    private java.awt.TextField camponota;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Button promedio;
    private java.awt.TextField promedioGeneral;
    private javax.swing.JTextArea textArea;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
